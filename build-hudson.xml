<project>

	<!-- This depends on the Hudson workspace structure. -->
	<property name="hudson-tools-archive-dir" location="../../hudson_tools/lastStable/archive" />

	<import file="${hudson-tools-archive-dir}/build-common.xml" />

	<target name="build" depends="do-init-release, do-compile, do-test, project-jar, 3rd-party-jars, project-release, release-doc, do-checkstyle, do-findbugs, do-cpd" />

	<target name="build-nightly" depends="do-init-release, do-compile, do-test-nightly" />

	<!-- !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! -->

	<property name="project-name" value="shabdiz" />
	
	<path id="project-classpath">
		<pathelement location="bin" />
		<pathelement location="src" />
		<pathelement location="${lib-nds}" />
		<pathelement location="${lib-mindterm}" />
		<pathelement location="${lib-json}" />
		<pathelement location="${lib-junit}" />
	</path>

	<property name="classpath" value="${toString:project-classpath}" />

	<property name="compile-src-dir" value="src" />
	<property name="compile-includes" value="**/*.java" />
	<property name="compile-dest-dir" value="bin" />

	<property name="checkstyle-check-dir" value="src" />
	<property name="cpd-check-dir" value="src" />

	<property name="findbugs-src-dir" value="src/uk/ac/standrews/cs/${project-name}" />
	<property name="findbugs-check-dir" value="bin/uk/ac/standrews/cs/${project-name}" />

	<property name="test-name" value="uk.ac.standrews.cs.${project-name}.test.CheckInTests" />
	<property name="cobertura-exclude" value="**/test/**/*.class" />
	<property name="cobertura-src" value="test" />

	<!-- !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! -->

	<!-- Run nightly tests. -->
	<target name="do-test-nightly">
		<ant target="do-test-no-coverage" antfile="build-hudson.xml">
			<property name="test-name" value="uk.ac.standrews.cs.${project-name}.test.NightlyTests" />
		</ant>
	</target>

	<!-- Generate project jar. -->
	<target name="project-jar">
		<jar destfile="bin/${project-name}.jar">
			<fileset dir="bin" includes="**/*.class" />
			<fileset dir="src" />
		</jar>
	</target>

	<!-- Copy 3rd party jars. -->
	<target name="3rd-party-jars">
		<copy file="${lib-json}" todir="lib" />
		<copy file="${lib-mindterm}" todir="lib" />
	</target>

	<!-- Generate project release containing jar and libraries. -->
	<target name="project-release">
		<zip destfile="bin/${project-name}.zip">
			<fileset dir="bin" includes="**/*.jar" />
			<fileset dir="lib" includes="**/*.jar" />
		</zip>
	</target>

	<!-- Generate javadoc. -->
	<target name="release-doc">
		<javadoc classpath="${classpath}" sourcepath="src" destdir="doc" packagenames="uk.ac.standrews.cs.${project-name}.*" access="public" linksource="yes" source="1.6" nodeprecated="false" nodeprecatedlist="false" noindex="false" nonavbar="false" notree="false" splitindex="false" use="false" author="true" version="true" verbose="true">

			<!-- Link to Java API from generated documentation. -->
			<link href="${doc-java}" />

			<link href="${doc-nds}" />
			<link href="${doc-mindterm}" />
		</javadoc>
	</target>

</project>
